{"ast":null,"code":"//register event handlers\n//if someone clicks on the bakery names\nimport $ from 'jquery';\nimport { randomInteger } from \"../site\";\nexport let name;\nlet json;\nexport function bringUpRenamePromt() {\n  $(\"#rename-cover\").css(\"visibility\", \"visible\");\n  $(\"#name-input\").val(name);\n}\nexport function populateJson() {\n  let fetchBakeryNamePromise = new Promise(function (success, failure) {\n    $.getJSON(\"text/bakery-names.json\", function (data) {\n      success(data);\n    }).fail(function () {\n      failure();\n    });\n  });\n  fetchBakeryNamePromise.then(function (data)\n  //Success\n  {\n    json = data;\n    if ($(\"#bakery-name\").text() != null) return;\n    name = json.adjectives[randomInteger(0, json.adjectives.length)];\n    name += json.nouns[randomInteger(0, json.nouns.length)];\n    $(\"#bakery-name\").text(name);\n  }, function ()\n  // Failure\n  {\n    alert(\"Unable to fetch bakery names!\");\n    console.error(\"Unable to fetch bakery names!\");\n  });\n}\nexport function randomizeNameInput() {\n  let tempName = json.adjectives[randomInteger(0, json.adjectives.length)];\n  tempName += json.nouns[randomInteger(0, json.nouns.length)];\n\n  /*let tempName = json.adjectives[Math.floor(Math.random() * json.adjectives.length)];*/\n  tempName += json.nouns[Math.floor(Math.random() * json.nouns.length)];\n  $(\"#name-input\").val(tempName);\n}\nexport function acceptName() {\n  var name = $('#name-input').val();\n\n  //change our new name to your bakery name now\n  $(\"#bakery-name\").text(name);\n  //selecting rename cover from dom\n  $(\"#rename-cover\").css(\"visibility\", \"hidden\");\n}","map":{"version":3,"names":["$","randomInteger","name","json","bringUpRenamePromt","css","val","populateJson","fetchBakeryNamePromise","Promise","success","failure","getJSON","data","fail","then","text","adjectives","length","nouns","alert","console","error","randomizeNameInput","tempName","Math","floor","random","acceptName"],"sources":["C:/Users/lucas/Downloads/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/bakeryName.js"],"sourcesContent":["//register event handlers\n//if someone clicks on the bakery names\nimport $ from 'jquery';\nimport {randomInteger} from \"../site\"\n\nexport let name;\nlet json;\n\nexport function bringUpRenamePromt()\n{\n    $(\"#rename-cover\").css(\"visibility\", \"visible\");\n\n    $(\"#name-input\").val(name);\n\n   \n}\n\nexport function populateJson(){\n    let fetchBakeryNamePromise = new Promise(function (success,failure)\n    {\n        $.getJSON(\"text/bakery-names.json\",function(data)\n        {\n            success(data);\n        })\n        .fail(function()\n        {\n            failure();\n        })\n    });\n    fetchBakeryNamePromise.then(\n        function (data)//Success\n        {\n            json = data;\n\n            if($(\"#bakery-name\").text()!= null) return;\n\n            name = json.adjectives[randomInteger(0, json.adjectives.length)];\n            name += json.nouns[randomInteger(0, json.nouns.length)];\n\n            \n            $(\"#bakery-name\").text(name);\n        },\n        function() // Failure\n        {\n            alert(\"Unable to fetch bakery names!\");\n            console.error(\"Unable to fetch bakery names!\");\n        }\n    );\n\n}\n\n\nexport function randomizeNameInput()\n{\n\n    let tempName = json.adjectives[randomInteger(0, json.adjectives.length)];\n    tempName += json.nouns[randomInteger(0, json.nouns.length)];\n\n\n    /*let tempName = json.adjectives[Math.floor(Math.random() * json.adjectives.length)];*/\n    tempName += json.nouns[Math.floor(Math.random() * json.nouns.length)];\n    $(\"#name-input\").val(tempName);\n}\n\nexport function acceptName()\n{\n    var name = $('#name-input').val();\n    \n    //change our new name to your bakery name now\n    $(\"#bakery-name\").text(name);\n    //selecting rename cover from dom\n    $(\"#rename-cover\").css(\"visibility\", \"hidden\");\n\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAAQC,aAAa,QAAO,SAAS;AAErC,OAAO,IAAIC,IAAI;AACf,IAAIC,IAAI;AAER,OAAO,SAASC,kBAAkB,GAClC;EACIJ,CAAC,CAAC,eAAe,CAAC,CAACK,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC;EAE/CL,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,CAACJ,IAAI,CAAC;AAG9B;AAEA,OAAO,SAASK,YAAY,GAAE;EAC1B,IAAIC,sBAAsB,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAACC,OAAO,EAClE;IACIX,CAAC,CAACY,OAAO,CAAC,wBAAwB,EAAC,UAASC,IAAI,EAChD;MACIH,OAAO,CAACG,IAAI,CAAC;IACjB,CAAC,CAAC,CACDC,IAAI,CAAC,YACN;MACIH,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC,CAAC;EACFH,sBAAsB,CAACO,IAAI,CACvB,UAAUF,IAAI;EAAC;EACf;IACIV,IAAI,GAAGU,IAAI;IAEX,IAAGb,CAAC,CAAC,cAAc,CAAC,CAACgB,IAAI,EAAE,IAAG,IAAI,EAAE;IAEpCd,IAAI,GAAGC,IAAI,CAACc,UAAU,CAAChB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACc,UAAU,CAACC,MAAM,CAAC,CAAC;IAChEhB,IAAI,IAAIC,IAAI,CAACgB,KAAK,CAAClB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACgB,KAAK,CAACD,MAAM,CAAC,CAAC;IAGvDlB,CAAC,CAAC,cAAc,CAAC,CAACgB,IAAI,CAACd,IAAI,CAAC;EAChC,CAAC,EACD;EAAW;EACX;IACIkB,KAAK,CAAC,+BAA+B,CAAC;IACtCC,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;EAClD,CAAC,CACJ;AAEL;AAGA,OAAO,SAASC,kBAAkB,GAClC;EAEI,IAAIC,QAAQ,GAAGrB,IAAI,CAACc,UAAU,CAAChB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACc,UAAU,CAACC,MAAM,CAAC,CAAC;EACxEM,QAAQ,IAAIrB,IAAI,CAACgB,KAAK,CAAClB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACgB,KAAK,CAACD,MAAM,CAAC,CAAC;;EAG3D;EACAM,QAAQ,IAAIrB,IAAI,CAACgB,KAAK,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGxB,IAAI,CAACgB,KAAK,CAACD,MAAM,CAAC,CAAC;EACrElB,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,CAACkB,QAAQ,CAAC;AAClC;AAEA,OAAO,SAASI,UAAU,GAC1B;EACI,IAAI1B,IAAI,GAAGF,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,EAAE;;EAEjC;EACAN,CAAC,CAAC,cAAc,CAAC,CAACgB,IAAI,CAACd,IAAI,CAAC;EAC5B;EACAF,CAAC,CAAC,eAAe,CAAC,CAACK,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;AAElD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
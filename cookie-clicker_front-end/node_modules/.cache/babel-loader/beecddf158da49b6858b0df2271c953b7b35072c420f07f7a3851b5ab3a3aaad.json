{"ast":null,"code":"import $ from \"jquery\";\nimport { createToast } from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\";\nexport function save() {\n  console.log(\"cookie stuff is happenin\");\n  createToast(\"Game saved\", 2000);\n  document.cookie = `cookies=${cookieHandler.cookies}; SameSite=Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n  document.cookie = `name=${name}; SameSite=Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n}\nexport function load() {\n  cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n  /*below is how we handle the first time loading a page*/\n\n  cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n\n  /* load bakery name*/\n\n  $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n}\nfunction updateGUI() {\n  document.getElementById(\"cookie-counter\").innerHTML = cookies;\n  document.getElementById(\"cps-counter\").innerHTML = cps;\n}\nfunction getCookie(name) {\n  return document.cookie.split(\"; \").find(x => x.startsWith(`${name}=`))?.split(\"=\")[1];\n}","map":{"version":3,"names":["$","createToast","cookieHandler","save","console","log","document","cookie","cookies","name","load","changeAmountOfCookies","Number","getCookie","isNaN","text","updateGUI","getElementById","innerHTML","cps","split","find","x","startsWith"],"sources":["C:/Users/lucas/Downloads/CookieClickerVue/CookieClickerVue/cookie-clicker_front-end/public/js/index/gameSaveManager.js"],"sourcesContent":["import $ from \"jquery\";\nimport {createToast} from \"./toastController.js\";\nimport * as cookieHandler from \"./cookieHandler.js\"\n\nexport function save()\n{\n    console.log(\"cookie stuff is happenin\");\n    createToast(\"Game saved\", 2000);\n    \n    document.cookie = `cookies=${cookieHandler.cookies}; SameSite=Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;\n    document.cookie = `name=${name}; SameSite=Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT`;    \n}\n\nexport function load()\n{\n    \n    cookieHandler.changeAmountOfCookies(Number(getCookie(\"cookies\")));\n    /*below is how we handle the first time loading a page*/\n\n    cookieHandler.changeAmountOfCookies(isNaN(cookieHandler.cookies) ? 0 : cookieHandler.cookies);\n\n    /* load bakery name*/\n    \n    $(\"#bakery-name\").text(getCookie(\"bakeryName\"));\n}\n\nfunction updateGUI()\n{\n    document.getElementById(\"cookie-counter\").innerHTML = cookies;\n    document.getElementById(\"cps-counter\").innerHTML = cps;\n}\n\nfunction getCookie(name){\n    return document.cookie.split(\"; \").find((x) => x.startsWith(`${name}=`))?.split(\"=\")[1]\n}"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAAQC,WAAW,QAAO,sBAAsB;AAChD,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAEnD,OAAO,SAASC,IAAI,GACpB;EACIC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCJ,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC;EAE/BK,QAAQ,CAACC,MAAM,GAAI,WAAUL,aAAa,CAACM,OAAQ,0DAAyD;EAC5GF,QAAQ,CAACC,MAAM,GAAI,QAAOE,IAAK,0DAAyD;AAC5F;AAEA,OAAO,SAASC,IAAI,GACpB;EAEIR,aAAa,CAACS,qBAAqB,CAACC,MAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;EACjE;;EAEAX,aAAa,CAACS,qBAAqB,CAACG,KAAK,CAACZ,aAAa,CAACM,OAAO,CAAC,GAAG,CAAC,GAAGN,aAAa,CAACM,OAAO,CAAC;;EAE7F;;EAEAR,CAAC,CAAC,cAAc,CAAC,CAACe,IAAI,CAACF,SAAS,CAAC,YAAY,CAAC,CAAC;AACnD;AAEA,SAASG,SAAS,GAClB;EACIV,QAAQ,CAACW,cAAc,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAGV,OAAO;EAC7DF,QAAQ,CAACW,cAAc,CAAC,aAAa,CAAC,CAACC,SAAS,GAAGC,GAAG;AAC1D;AAEA,SAASN,SAAS,CAACJ,IAAI,EAAC;EACpB,OAAOH,QAAQ,CAACC,MAAM,CAACa,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAAE,GAAEd,IAAK,GAAE,CAAC,CAAC,EAAEW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3F"},"metadata":{},"sourceType":"module","externalDependencies":[]}
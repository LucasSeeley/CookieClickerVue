{"ast":null,"code":"import { cookies, cps, changeCps, changeAmountOfCookies } from \"./cookieHandler.js\";\nimport { roundToNearest } from \"../site.js\";\nexport let cursors = 0;\nexport let cursorPrice = 15;\nlet cursorCPS = 1;\nexport let grandmas = 0;\nexport let grandmaPrice = 100;\nlet grandmaCPS = 5;\nexport let farms = 0;\nexport let farmPrice = 1100;\nlet farmCPS = 10;\nexport function load(_cursors, _grandmas, _farms, _cursorPrice, _grandmaPrice, _farmPrice) {\n  // cursors\n  cursors = isNaN(_cursors) ? 0 : _cursors;\n  cursorPrice = isNaN(_cursorPrice) ? 15 : _cursorPrice;\n  document.getElementById(\"cursor-building\").querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\n  changeCps(cps + cursorCPS * cursors);\n\n  // grandmas\n  grandmas = isNaN(_grandmas) ? 0 : _grandmas;\n  grandmaPrice = isNaN(_grandmaPrice) ? 100 : _grandmaPrice;\n  document.getElementById(\"grandma-building\").querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\n  changeCps(cps + grandmaCPS * grandmas);\n\n  // farms\n  farms = isNaN(_farms) ? 0 : _farms;\n  farmPrice = isNaN(_farmPrice) ? 1100 : _farmPrice;\n  document.getElementById(\"farm-building\").querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\n  changeCps(cps + farmCPS * farms);\n}\nexport function buy(event) {\n  console.log(event);\n  switch (event.currentTarget.id.toLowerCase()) {\n    case \"cursor-building\":\n      if (doPurchase(cursorPrice) === true) {\n        // do the purchase\n        changeCps(cps + cursorCPS);\n        cursors++;\n        // cursor price will need to be rounded to nearest whole number, \n        // but will need to be calculated first, the rounded\n        cursorPrice *= 1.15;\n        cursorPrice = roundToNearest(cursorPrice, 0);\n        event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\n      }\n      break;\n    case \"grandma-building\":\n      if (doPurchase(grandmaPrice) === true) {\n        // do the purchase\n        changeCps(cps + grandmaCPS);\n        grandmas++;\n        // grandma price will need to be rounded to nearest whole number, \n        // but will need to be calculated first, the rounded\n        grandmaPrice *= 1.15;\n        grandmaPrice = roundToNearest(grandmaPrice, 0);\n        event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\n      }\n      break;\n    case \"farm-building\":\n      if (doPurchase(farmPrice) === true) {\n        changeCps(cps + farmCPS);\n        farms++;\n        farmPrice *= 1.15;\n        farmPrice = roundToNearest(farmPrice, 0);\n        event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\n      }\n      break;\n    default:\n      console.error(\"Invalid ID was given to Building.\");\n  }\n}\nfunction doPurchase(price) {\n  if (cookies >= price) {\n    changeAmountOfCookies(cookies - price);\n    return true;\n  }\n  return false;\n}\nexport function resetUpgrades() {\n  cursors = 0;\n  cursorPrice = 15;\n  cursorCPS = 1;\n  grandmas = 0;\n  grandmaPrice = 100;\n  grandmaCPS = 5;\n  farms = 0;\n  farmPrice = 1100;\n  farmCPS = 10;\n  document.getElementById(\"cursor-building\").querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\n  document.getElementById(\"grandma-building\").querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\n  document.getElementById(\"farm-building\").querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\n}","map":{"version":3,"names":["cookies","cps","changeCps","changeAmountOfCookies","roundToNearest","cursors","cursorPrice","cursorCPS","grandmas","grandmaPrice","grandmaCPS","farms","farmPrice","farmCPS","load","_cursors","_grandmas","_farms","_cursorPrice","_grandmaPrice","_farmPrice","isNaN","document","getElementById","querySelector","innerHTML","Math","round","buy","event","console","log","currentTarget","id","toLowerCase","doPurchase","error","price","resetUpgrades"],"sources":["C:/Users/lucas/Desktop/CookieClickerVue/cookie-clicker_front-end/public/js/index/cpsUpgradeHandler.js"],"sourcesContent":["import { cookies, cps, changeCps, changeAmountOfCookies } from \"./cookieHandler.js\";\r\nimport { roundToNearest } from \"../site.js\";\r\n\r\nexport let cursors = 0;\r\nexport let cursorPrice = 15;\r\nlet cursorCPS = 1;\r\nexport let grandmas = 0;\r\nexport let grandmaPrice = 100;\r\nlet grandmaCPS = 5;\r\nexport let farms = 0;\r\nexport let farmPrice = 1100;\r\nlet farmCPS = 10;\r\n\r\nexport function load(_cursors, _grandmas, _farms, _cursorPrice, _grandmaPrice, _farmPrice)\r\n{\r\n    // cursors\r\n    cursors = isNaN(_cursors) ? 0 : _cursors;\r\n    cursorPrice = isNaN(_cursorPrice) ? 15 : _cursorPrice;\r\n    document.getElementById(\"cursor-building\").querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\r\n    changeCps(cps + cursorCPS * cursors);\r\n\r\n    // grandmas\r\n    grandmas = isNaN(_grandmas) ? 0 : _grandmas;\r\n    grandmaPrice = isNaN(_grandmaPrice) ? 100 : _grandmaPrice;\r\n\r\n    document.getElementById(\"grandma-building\").querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\r\n    changeCps(cps + grandmaCPS * grandmas);\r\n\r\n    // farms\r\n    farms = isNaN(_farms) ? 0 : _farms;\r\n    farmPrice = isNaN(_farmPrice) ? 1100 : _farmPrice;\r\n\r\n    document.getElementById(\"farm-building\").querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\r\n    changeCps(cps + farmCPS * farms);\r\n}\r\n\r\nexport function buy(event) \r\n{\r\n    console.log(event);\r\n\r\n    switch(event.currentTarget.id.toLowerCase())\r\n    {\r\n        case \"cursor-building\":\r\n            if(doPurchase(cursorPrice) === true)\r\n            {\r\n                // do the purchase\r\n                changeCps(cps + cursorCPS);\r\n                cursors++;\r\n                // cursor price will need to be rounded to nearest whole number, \r\n                // but will need to be calculated first, the rounded\r\n                cursorPrice *= 1.15;\r\n                cursorPrice = roundToNearest(cursorPrice, 0);\r\n                event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\r\n            }\r\n            break;\r\n        case \"grandma-building\":\r\n            if(doPurchase(grandmaPrice) === true)\r\n            {\r\n                // do the purchase\r\n                changeCps(cps + grandmaCPS);\r\n                grandmas++;\r\n                // grandma price will need to be rounded to nearest whole number, \r\n                // but will need to be calculated first, the rounded\r\n                grandmaPrice *= 1.15;\r\n                grandmaPrice = roundToNearest(grandmaPrice, 0);\r\n                event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\r\n            }\r\n            break;\r\n        case \"farm-building\":\r\n            if(doPurchase(farmPrice) === true){\r\n                changeCps(cps + farmCPS);\r\n                farms++;\r\n\r\n                farmPrice *= 1.15;\r\n                farmPrice = roundToNearest(farmPrice, 0);\r\n                event.currentTarget.querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\r\n            }\r\n            break;\r\n        default:\r\n            console.error(\"Invalid ID was given to Building.\");\r\n    }\r\n}\r\n\r\nfunction doPurchase(price) \r\n{\r\n    if (cookies >= price) \r\n    {\r\n        changeAmountOfCookies(cookies - price);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function resetUpgrades() {\r\n    cursors = 0;\r\n    cursorPrice = 15;\r\n    cursorCPS = 1;\r\n    grandmas = 0;\r\n     grandmaPrice = 100;\r\n    grandmaCPS = 5;\r\n    farms = 0;\r\n    farmPrice = 1100;\r\n    farmCPS = 10;\r\n        document.getElementById(\"cursor-building\").querySelector(\".price-text\").innerHTML = Math.round(cursorPrice);\r\n        document.getElementById(\"grandma-building\").querySelector(\".price-text\").innerHTML = Math.round(grandmaPrice);\r\n        document.getElementById(\"farm-building\").querySelector(\".price-text\").innerHTML = Math.round(farmPrice);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
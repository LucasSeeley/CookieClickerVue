{"ast":null,"code":"//register event handlers\n//if someone clicks on the bakery names\nimport $ from 'jquery';\nimport { randomInteger } from \"../site\";\nexport let name;\nlet json;\nexport function bringUpRenamePrompt() {\n  $(\"#name-input\").keyup(function () {\n    if ($(\"#name-input\").val().length > 20) {\n      $(\"#name-input\").val($(\"#name-input\").val().substring(0, 20));\n    }\n  });\n}\nexport function populateJson() {\n  let fetchBakeryNamePromise = new Promise(function (success, failure) {\n    $.getJSON(\"text/bakery-names.json\", function (data) {\n      success(data);\n    }).fail(function () {\n      failure();\n    });\n  });\n  fetchBakeryNamePromise.then(function (data)\n  //Success\n  {\n    json = data;\n    if ($(\"#bakery-name\").text() != null) {\n      name = $(\"#bakery-name\").text();\n      return;\n    }\n    name = json.adjectives[randomInteger(0, json.adjectives.length)];\n    name += json.nouns[randomInteger(0, json.nouns.length)];\n    $(\"#bakery-name\").text(name);\n  }, function ()\n  // Failure\n  {\n    alert(\"Unable to fetch bakery names!\");\n    console.error(\"Unable to fetch bakery names!\");\n  });\n}\nexport function randomizeNameInput() {\n  let tempName = json.adjectives[randomInteger(0, json.adjectives.length)];\n  tempName += json.nouns[randomInteger(0, json.nouns.length)];\n\n  /*let tempName = json.adjectives[Math.floor(Math.random() * json.adjectives.length)];*/\n  tempName += json.nouns[Math.floor(Math.random() * json.nouns.length)];\n  $(\"#name-input\").val(tempName);\n}\nexport function acceptName() {\n  var name = $('#name-input').val();\n\n  //change our new name to your bakery name now\n  $(\"#bakery-name\").text(name);\n  //selecting rename cover from dom\n  $(\"#rename-cover\").css(\"visibility\", \"hidden\");\n}","map":{"version":3,"names":["$","randomInteger","name","json","bringUpRenamePrompt","keyup","val","length","substring","populateJson","fetchBakeryNamePromise","Promise","success","failure","getJSON","data","fail","then","text","adjectives","nouns","alert","console","error","randomizeNameInput","tempName","Math","floor","random","acceptName","css"],"sources":["C:/Users/lucas/Desktop/CookieClickerVue/cookie-clicker_front-end/public/js/index/bakeryName.js"],"sourcesContent":["//register event handlers\r\n//if someone clicks on the bakery names\r\nimport $ from 'jquery';\r\nimport {randomInteger} from \"../site\"\r\n\r\nexport let name;\r\nlet json;\r\n\r\nexport function bringUpRenamePrompt()\r\n{\r\n\r\n    $(\"#name-input\").keyup(function () {\r\n        if ($(\"#name-input\").val().length > 20) {\r\n            $(\"#name-input\").val($(\"#name-input\").val().substring(0, 20));\r\n        }\r\n    });\r\n\r\n   \r\n}\r\n\r\nexport function populateJson(){\r\n    let fetchBakeryNamePromise = new Promise(function (success,failure)\r\n    {\r\n        $.getJSON(\"text/bakery-names.json\",function(data)\r\n        {\r\n            success(data);\r\n        })\r\n        .fail(function()\r\n        {\r\n            failure();\r\n        })\r\n    });\r\n    fetchBakeryNamePromise.then(\r\n        function (data)//Success\r\n        {\r\n            json = data;\r\n\r\n            if($(\"#bakery-name\").text() != null){\r\n                name = $(\"#bakery-name\").text();\r\n                return;\r\n            }\r\n\r\n            name = json.adjectives[randomInteger(0, json.adjectives.length)];\r\n            name += json.nouns[randomInteger(0, json.nouns.length)];\r\n\r\n            \r\n            $(\"#bakery-name\").text(name);\r\n        },\r\n        function() // Failure\r\n        {\r\n            alert(\"Unable to fetch bakery names!\");\r\n            console.error(\"Unable to fetch bakery names!\");\r\n        }\r\n    );\r\n\r\n}\r\n\r\n\r\nexport function randomizeNameInput()\r\n{\r\n\r\n    let tempName = json.adjectives[randomInteger(0, json.adjectives.length)];\r\n    tempName += json.nouns[randomInteger(0, json.nouns.length)];\r\n\r\n\r\n    /*let tempName = json.adjectives[Math.floor(Math.random() * json.adjectives.length)];*/\r\n    tempName += json.nouns[Math.floor(Math.random() * json.nouns.length)];\r\n    $(\"#name-input\").val(tempName);\r\n}\r\n\r\nexport function acceptName()\r\n{\r\n    var name = $('#name-input').val();\r\n    \r\n    //change our new name to your bakery name now\r\n    $(\"#bakery-name\").text(name);\r\n    //selecting rename cover from dom\r\n    $(\"#rename-cover\").css(\"visibility\", \"hidden\");\r\n\r\n}\r\n"],"mappings":"AAAA;AACA;AACA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAAQC,aAAa,QAAO,SAAS;AAErC,OAAO,IAAIC,IAAI;AACf,IAAIC,IAAI;AAER,OAAO,SAASC,mBAAmB,GACnC;EAEIJ,CAAC,CAAC,aAAa,CAAC,CAACK,KAAK,CAAC,YAAY;IAC/B,IAAIL,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,EAAE,CAACC,MAAM,GAAG,EAAE,EAAE;MACpCP,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,CAACN,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,EAAE,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACjE;EACJ,CAAC,CAAC;AAGN;AAEA,OAAO,SAASC,YAAY,GAAE;EAC1B,IAAIC,sBAAsB,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAACC,OAAO,EAClE;IACIb,CAAC,CAACc,OAAO,CAAC,wBAAwB,EAAC,UAASC,IAAI,EAChD;MACIH,OAAO,CAACG,IAAI,CAAC;IACjB,CAAC,CAAC,CACDC,IAAI,CAAC,YACN;MACIH,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC,CAAC;EACFH,sBAAsB,CAACO,IAAI,CACvB,UAAUF,IAAI;EAAC;EACf;IACIZ,IAAI,GAAGY,IAAI;IAEX,IAAGf,CAAC,CAAC,cAAc,CAAC,CAACkB,IAAI,EAAE,IAAI,IAAI,EAAC;MAChChB,IAAI,GAAGF,CAAC,CAAC,cAAc,CAAC,CAACkB,IAAI,EAAE;MAC/B;IACJ;IAEAhB,IAAI,GAAGC,IAAI,CAACgB,UAAU,CAAClB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACgB,UAAU,CAACZ,MAAM,CAAC,CAAC;IAChEL,IAAI,IAAIC,IAAI,CAACiB,KAAK,CAACnB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACiB,KAAK,CAACb,MAAM,CAAC,CAAC;IAGvDP,CAAC,CAAC,cAAc,CAAC,CAACkB,IAAI,CAAChB,IAAI,CAAC;EAChC,CAAC,EACD;EAAW;EACX;IACImB,KAAK,CAAC,+BAA+B,CAAC;IACtCC,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;EAClD,CAAC,CACJ;AAEL;AAGA,OAAO,SAASC,kBAAkB,GAClC;EAEI,IAAIC,QAAQ,GAAGtB,IAAI,CAACgB,UAAU,CAAClB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACgB,UAAU,CAACZ,MAAM,CAAC,CAAC;EACxEkB,QAAQ,IAAItB,IAAI,CAACiB,KAAK,CAACnB,aAAa,CAAC,CAAC,EAAEE,IAAI,CAACiB,KAAK,CAACb,MAAM,CAAC,CAAC;;EAG3D;EACAkB,QAAQ,IAAItB,IAAI,CAACiB,KAAK,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGzB,IAAI,CAACiB,KAAK,CAACb,MAAM,CAAC,CAAC;EACrEP,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,CAACmB,QAAQ,CAAC;AAClC;AAEA,OAAO,SAASI,UAAU,GAC1B;EACI,IAAI3B,IAAI,GAAGF,CAAC,CAAC,aAAa,CAAC,CAACM,GAAG,EAAE;;EAEjC;EACAN,CAAC,CAAC,cAAc,CAAC,CAACkB,IAAI,CAAChB,IAAI,CAAC;EAC5B;EACAF,CAAC,CAAC,eAAe,CAAC,CAAC8B,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC;AAElD"},"metadata":{},"sourceType":"module","externalDependencies":[]}